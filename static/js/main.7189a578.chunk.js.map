{"version":3,"sources":["TableHeader.js","helpers.js","TableItemRow.js","TableBody.js","Table.js","AddItemForm.js","App.js","serviceWorker.js","index.js"],"names":["TableHeader","props","handleSort","sortProp","onSort","react_default","a","createElement","title","onClick","width","calcRPP","LBIN","desiredProfit","parseInt","roundRPP","x","Math","floor","compareFunc","b","prop","order","localeCompare","TableItemRow","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","currentTime","handleDelete","bind","assertThisInitialized","_this2","timerID","setInterval","setState","Date","clearInterval","onDelete","id","name","className","toLocaleString","distanceInWordsStrict","createdAt","addSuffix","viewBox","version","xmlns","style","stroke","strokeWidth","fillRule","d","Component","TableBody","items","map","item","src_TableItemRow","assign","key","Table","src_TableHeader","src_TableBody","AddItemForm","handleChange","handleSubmit","event","el","target","defineProperty","value","preventDefault","onAdd","onSubmit","htmlFor","type","placeholder","onChange","required","min","step","height","App","sortBy","sortOrder","itemObj","RPP","finalItemObj","uuidv1","concat","itemID","filter","slice","sort","src_AddItemForm","src_Table","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7189a578.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst TableHeader = props => {\r\n    function handleSort(sortProp) {\r\n        props.onSort(sortProp);\r\n    }\r\n\r\n    return (\r\n        <thead>\r\n            <tr>\r\n                <th title=\"Sort by name\" onClick={() => handleSort(\"name\")}>\r\n                    Name\r\n                </th>\r\n                <th\r\n                    title=\"Sort by Lowest Buy It Now value\"\r\n                    onClick={() => handleSort(\"LBIN\")}\r\n                >\r\n                    Lowest BIN\r\n                </th>\r\n                <th\r\n                    title=\"Sort by desired profit\"\r\n                    onClick={() => handleSort(\"desiredProfit\")}\r\n                >\r\n                    Desired profit\r\n                </th>\r\n                <th\r\n                    title=\"Sort by Recommended Purchase Price\"\r\n                    onClick={() => handleSort(\"RPP\")}\r\n                >\r\n                    RPP\r\n                </th>\r\n                <th\r\n                    title=\"Sort by date added\"\r\n                    onClick={() => handleSort(\"createdAt\")}\r\n                >\r\n                    Added\r\n                </th>\r\n                <th width=\"10%\">Delete</th>\r\n            </tr>\r\n        </thead>\r\n    );\r\n};\r\n\r\nexport default TableHeader;\r\n","export function calcRPP(LBIN, desiredProfit) {\r\n    return (parseInt(LBIN) * 0.95) - parseInt(desiredProfit);\r\n}\r\n\r\nexport function roundRPP(x) {\r\n    return x <= 10000 ? Math.floor(x / 100) * 100 : Math.floor(x / 250) * 250;\r\n}\r\n\r\nexport function formatRPP(x) {\r\n    return x.toLocaleString();\r\n}\r\n\r\nexport function compareFunc(a, b, prop, order) {\r\n    if (typeof a[prop] === \"string\") {\r\n        return order === \"asc\" ? a[prop].localeCompare(b[prop]) : b[prop].localeCompare(a[prop]);\r\n    }\r\n    \r\n    return order === \"asc\" ? a[prop] - b[prop] : b[prop] - a[prop];\r\n}","import React, { Component } from \"react\";\r\nimport { calcRPP, roundRPP, formatRPP } from \"./helpers\";\r\nimport distanceInWordsStrict from \"date-fns/distance_in_words_strict\";\r\n\r\nclass TableItemRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currentTime: \"now\"\r\n        };\r\n\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timerID = setInterval(\r\n            () => this.setState({ currentTime: new Date() }),\r\n            10000\r\n        );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID);\r\n    }\r\n\r\n    handleDelete() {\r\n        this.props.onDelete(this.props.id);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <tr>\r\n                <td>{this.props.name}</td>\r\n                <td>{this.props.LBIN}</td>\r\n                <td>{this.props.desiredProfit}</td>\r\n                <td className=\"h4 font-weight-bold\">\r\n                    {formatRPP(\r\n                        roundRPP(\r\n                            calcRPP(this.props.LBIN, this.props.desiredProfit)\r\n                        )\r\n                    )}\r\n                </td>\r\n                <td width=\"20%\">\r\n                    {this.state.currentTime === \"now\"\r\n                        ? \"Just now\"\r\n                        : distanceInWordsStrict(\r\n                              this.state.currentTime,\r\n                              this.props.createdAt,\r\n                              { addSuffix: true }\r\n                          )}\r\n                </td>\r\n                <td width=\"10%\">\r\n                    <button\r\n                        className=\"btn btn-outline-danger d-flex p-1 btn--delete\"\r\n                        onClick={this.handleDelete}\r\n                    >\r\n                        <svg\r\n                            viewBox=\"0 0 20 20\"\r\n                            version=\"1.1\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            style={{ width: \"20px\" }}\r\n                        >\r\n                            <g\r\n                                id=\"Page-1\"\r\n                                stroke=\"none\"\r\n                                strokeWidth=\"1\"\r\n                                fillRule=\"evenodd\"\r\n                            >\r\n                                <g id=\"icon-shape\">\r\n                                    <path\r\n                                        d=\"M2,2 L18,2 L18,4 L2,4 L2,2 Z M8,0 L12,0 L14,2 L6,2 L8,0 Z M3,6 L17,6 L16,20 L4,20 L3,6 Z M8,8 L9,8 L9,18 L8,18 L8,8 Z M11,8 L12,8 L12,18 L11,18 L11,8 Z\"\r\n                                        id=\"Combined-Shape\"\r\n                                    />\r\n                                </g>\r\n                            </g>\r\n                        </svg>\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TableItemRow;\r\n","import React from \"react\";\r\nimport TableItemRow from \"./TableItemRow\";\r\n\r\nconst TableBody = props => (\r\n    <tbody>\r\n        {props.items.map(item => (\r\n            <TableItemRow key={item.id} {...item} onDelete={props.onDelete} />\r\n        ))}\r\n    </tbody>\r\n);\r\n\r\nexport default TableBody;\r\n","import React from \"react\";\r\nimport TableHeader from \"./TableHeader\";\r\nimport TableBody from \"./TableBody\";\r\n\r\nconst Table = props => (\r\n    <table className=\"table table-hover\">\r\n        <TableHeader onSort={props.onSort} />\r\n        <TableBody items={props.items} onDelete={props.onDelete} />\r\n    </table>\r\n);\r\n\r\nexport default Table;\r\n","import React, { Component } from \"react\";\r\n\r\nclass AddItemForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: \"\",\r\n            LBIN: \"\",\r\n            desiredProfit: \"\"\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const el = event.target.name;\r\n        this.setState({ [el]: event.target.value });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.props.onAdd(this.state);\r\n        this.setState({ name: \"\", LBIN: \"\", desiredProfit: \"\" });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card\">\r\n                <div className=\"card-header\">Add new player</div>\r\n                <div className=\"card-body\">\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-3\">\r\n                                <label htmlFor=\"name\">Player name</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"name\"\r\n                                    id=\"name\"\r\n                                    placeholder=\"Stones\"\r\n                                    value={this.state.name}\r\n                                    onChange={this.handleChange}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group col-md-3\">\r\n                                <label htmlFor=\"LBIN\">Lowest BIN</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    name=\"LBIN\"\r\n                                    id=\"LBIN\"\r\n                                    placeholder=\"3000\"\r\n                                    value={this.state.LBIN}\r\n                                    onChange={this.handleChange}\r\n                                    required\r\n                                    min=\"200\"\r\n                                    step=\"100\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group col-md-3\">\r\n                                <label htmlFor=\"desired-profit\">\r\n                                    Desired Profit\r\n                                </label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    name=\"desiredProfit\"\r\n                                    id=\"desired-profit\"\r\n                                    placeholder=\"500\"\r\n                                    value={this.state.desiredProfit}\r\n                                    onChange={this.handleChange}\r\n                                    required\r\n                                    min=\"100\"\r\n                                    step=\"100\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group col-md-3\">\r\n                                <div className=\"h-100 d-flex\">\r\n                                    <div className=\"mt-auto d-flex w-100\">\r\n                                        <button\r\n                                            type=\"submit\"\r\n                                            className=\"btn btn-primary btn-block\"\r\n                                            style={{\r\n                                                height: \"calc(2.15625rem + 2px)\"\r\n                                            }}\r\n                                        >\r\n                                            Add Player\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddItemForm;\r\n","import React, { Component } from \"react\";\nimport Table from \"./Table\";\nimport AddItemForm from \"./AddItemForm\";\nimport uuidv1 from \"uuid/v1\";\nimport { calcRPP, roundRPP, compareFunc } from \"./helpers\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            items: [],\n            sortBy: \"createdAt\",\n            sortOrder: \"asc\"\n        };\n\n        this.onAdd = this.onAdd.bind(this);\n        this.onDelete = this.onDelete.bind(this);\n        this.onSort = this.onSort.bind(this);\n    }\n\n    onAdd(itemObj) {\n        const RPP = roundRPP(calcRPP(itemObj.LBIN, itemObj.desiredProfit));\n\n        const finalItemObj = {\n            name: itemObj.name,\n            LBIN: parseInt(itemObj.LBIN),\n            desiredProfit: parseInt(itemObj.desiredProfit),\n            RPP,\n            createdAt: new Date(),\n            id: uuidv1()\n        };\n\n        const items = this.state.items.concat(finalItemObj);\n\n        this.setState({ items });\n    }\n\n    onDelete(itemID) {\n        const items = this.state.items.filter(item => item.id !== itemID);\n        \n        this.setState({ items });\n    }\n\n    onSort(sortProp) {\n        let items = this.state.items.slice();\n\n        if (this.state.sortOrder === \"asc\") {\n            items = items.sort((a, b) => compareFunc(a, b, sortProp, \"desc\"));\n            this.setState({ items, sortBy: sortProp, sortOrder: \"desc\" });\n        } else {\n            items = items.sort((a, b) => compareFunc(a, b, sortProp, \"asc\"));\n            this.setState({ items, sortBy: sortProp, sortOrder: \"asc\" });\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"container my-5\">\n                <AddItemForm onAdd={this.onAdd} />\n                <div className=\"my-5\">\n                    <div className=\"table-responsive\">\n                        <Table\n                            items={this.state.items}\n                            onDelete={this.onDelete}\n                            onSort={this.onSort}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}