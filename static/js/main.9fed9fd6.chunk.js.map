{"version":3,"sources":["TableHeader.js","helpers.js","TableItemRow.js","TableBody.js","Table.js","AddItemForm.js","FilterByNameForm.js","App.js","serviceWorker.js","index.js"],"names":["TableHeader","props","handleSort","sortProp","onSort","react_default","a","createElement","title","onClick","width","onDeleteAll","calcRPP","LBIN","desiredProfit","parseInt","roundRPP","x","Math","floor","compareFunc","b","prop","order","localeCompare","TableItemRow","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","currentTime","handleDelete","bind","assertThisInitialized","_this2","timerID","setInterval","setState","Date","clearInterval","onDelete","id","name","className","toLocaleString","distanceInWordsStrict","createdAt","addSuffix","viewBox","version","xmlns","style","stroke","strokeWidth","fillRule","d","Component","TableBody","filtered","items","filter","item","toUpperCase","filterInput","includes","map","src_TableItemRow","assign","key","Table","src_TableHeader","src_TableBody","AddItemForm","handleChange","handleSubmit","event","el","target","defineProperty","value","preventDefault","onAdd","onSubmit","htmlFor","type","placeholder","onChange","required","min","step","height","FilterByNameForm","onFilterInputChange","App","sortBy","sortOrder","handleFilterInputChange","itemObj","RPP","finalItemObj","uuidv1","concat","itemID","slice","sort","src_AddItemForm","src_FilterByNameForm","src_Table","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9fed9fd6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst TableHeader = props => {\r\n    function handleSort(sortProp) {\r\n        props.onSort(sortProp);\r\n    }\r\n\r\n    function handleDeleteAll() {\r\n        props.onDeleteAll();\r\n    }\r\n\r\n    return (\r\n        <thead>\r\n            <tr>\r\n                <th title=\"Sort by name\" onClick={() => handleSort(\"name\")}>\r\n                    Name\r\n                </th>\r\n                <th\r\n                    title=\"Sort by Lowest Buy It Now value\"\r\n                    onClick={() => handleSort(\"LBIN\")}\r\n                >\r\n                    Lowest BIN\r\n                </th>\r\n                <th\r\n                    title=\"Sort by desired profit\"\r\n                    onClick={() => handleSort(\"desiredProfit\")}\r\n                >\r\n                    Desired profit\r\n                </th>\r\n                <th\r\n                    title=\"Sort by Recommended Purchase Price\"\r\n                    onClick={() => handleSort(\"RPP\")}\r\n                >\r\n                    RPP\r\n                </th>\r\n                <th\r\n                    title=\"Sort by date added\"\r\n                    onClick={() => handleSort(\"createdAt\")}\r\n                >\r\n                    Added\r\n                </th>\r\n                <th width=\"10%\" onClick={handleDeleteAll}>\r\n                    Delete All\r\n                </th>\r\n            </tr>\r\n        </thead>\r\n    );\r\n};\r\n\r\nexport default TableHeader;\r\n","export function calcRPP(LBIN, desiredProfit) {\r\n    return (parseInt(LBIN) * 0.95) - parseInt(desiredProfit);\r\n}\r\n\r\nexport function roundRPP(x) {\r\n    return x <= 10000 ? Math.floor(x / 100) * 100 : Math.floor(x / 250) * 250;\r\n}\r\n\r\nexport function formatRPP(x) {\r\n    return x.toLocaleString();\r\n}\r\n\r\nexport function compareFunc(a, b, prop, order) {\r\n    if (typeof a[prop] === \"string\") {\r\n        return order === \"asc\" ? a[prop].localeCompare(b[prop]) : b[prop].localeCompare(a[prop]);\r\n    }\r\n    \r\n    return order === \"asc\" ? a[prop] - b[prop] : b[prop] - a[prop];\r\n}","import React, { Component } from \"react\";\r\nimport { calcRPP, roundRPP, formatRPP } from \"./helpers\";\r\nimport distanceInWordsStrict from \"date-fns/distance_in_words_strict\";\r\n\r\nclass TableItemRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currentTime: \"now\"\r\n        };\r\n\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timerID = setInterval(\r\n            () => this.setState({ currentTime: new Date() }),\r\n            10000\r\n        );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID);\r\n    }\r\n\r\n    handleDelete() {\r\n        this.props.onDelete(this.props.id);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <tr>\r\n                <td>{this.props.name}</td>\r\n                <td>{this.props.LBIN}</td>\r\n                <td>{this.props.desiredProfit}</td>\r\n                <td className=\"h4 font-weight-bold\">\r\n                    {formatRPP(\r\n                        roundRPP(\r\n                            calcRPP(this.props.LBIN, this.props.desiredProfit)\r\n                        )\r\n                    )}\r\n                </td>\r\n                <td width=\"20%\">\r\n                    {this.state.currentTime === \"now\"\r\n                        ? \"Just now\"\r\n                        : distanceInWordsStrict(\r\n                              this.state.currentTime,\r\n                              this.props.createdAt,\r\n                              { addSuffix: true }\r\n                          )}\r\n                </td>\r\n                <td width=\"10%\">\r\n                    <button\r\n                        className=\"btn btn-outline-danger d-flex p-1 btn--delete\"\r\n                        onClick={this.handleDelete}\r\n                    >\r\n                        <svg\r\n                            viewBox=\"0 0 20 20\"\r\n                            version=\"1.1\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            style={{ width: \"20px\" }}\r\n                        >\r\n                            <g\r\n                                id=\"Page-1\"\r\n                                stroke=\"none\"\r\n                                strokeWidth=\"1\"\r\n                                fillRule=\"evenodd\"\r\n                            >\r\n                                <g id=\"icon-shape\">\r\n                                    <path\r\n                                        d=\"M2,2 L18,2 L18,4 L2,4 L2,2 Z M8,0 L12,0 L14,2 L6,2 L8,0 Z M3,6 L17,6 L16,20 L4,20 L3,6 Z M8,8 L9,8 L9,18 L8,18 L8,8 Z M11,8 L12,8 L12,18 L11,18 L11,8 Z\"\r\n                                        id=\"Combined-Shape\"\r\n                                    />\r\n                                </g>\r\n                            </g>\r\n                        </svg>\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TableItemRow;\r\n","import React from \"react\";\r\nimport TableItemRow from \"./TableItemRow\";\r\n\r\nconst TableBody = props => {\r\n    const filtered = props.items.filter(item => {\r\n        const name = item.name.toUpperCase();\r\n        const filterInput = props.filterInput.toUpperCase();\r\n        return name.includes(filterInput);\r\n    });\r\n\r\n    return (\r\n        <tbody>\r\n            {filtered.map(item => (\r\n                <TableItemRow\r\n                    key={item.id}\r\n                    {...item}\r\n                    onDelete={props.onDelete}\r\n                />\r\n            ))}\r\n        </tbody>\r\n    );\r\n};\r\n\r\nexport default TableBody;\r\n","import React from \"react\";\r\nimport TableHeader from \"./TableHeader\";\r\nimport TableBody from \"./TableBody\";\r\n\r\nconst Table = props => (\r\n    <table className=\"table table-hover\">\r\n        <TableHeader onSort={props.onSort} onDeleteAll={props.onDeleteAll} />\r\n        <TableBody\r\n            items={props.items}\r\n            onDelete={props.onDelete}\r\n            filterInput={props.filterInput}\r\n        />\r\n    </table>\r\n);\r\n\r\nexport default Table;\r\n","import React, { Component } from \"react\";\r\n\r\nclass AddItemForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: \"\",\r\n            LBIN: \"\",\r\n            desiredProfit: \"\"\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const el = event.target.name;\r\n        this.setState({ [el]: event.target.value });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.props.onAdd(this.state);\r\n        this.setState({ name: \"\", LBIN: \"\", desiredProfit: \"\" });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card\">\r\n                <div className=\"card-header\">Add new player</div>\r\n                <div className=\"card-body\">\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-3\">\r\n                                <label htmlFor=\"name\">Player name</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"name\"\r\n                                    id=\"name\"\r\n                                    placeholder=\"Stones\"\r\n                                    value={this.state.name}\r\n                                    onChange={this.handleChange}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group col-md-3\">\r\n                                <label htmlFor=\"LBIN\">Lowest BIN</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    name=\"LBIN\"\r\n                                    id=\"LBIN\"\r\n                                    placeholder=\"3000\"\r\n                                    value={this.state.LBIN}\r\n                                    onChange={this.handleChange}\r\n                                    required\r\n                                    min=\"200\"\r\n                                    step=\"100\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group col-md-3\">\r\n                                <label htmlFor=\"desired-profit\">\r\n                                    Desired Profit\r\n                                </label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    name=\"desiredProfit\"\r\n                                    id=\"desired-profit\"\r\n                                    placeholder=\"500\"\r\n                                    value={this.state.desiredProfit}\r\n                                    onChange={this.handleChange}\r\n                                    required\r\n                                    min=\"100\"\r\n                                    step=\"100\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group col-md-3\">\r\n                                <div className=\"h-100 d-flex\">\r\n                                    <div className=\"mt-auto d-flex w-100\">\r\n                                        <button\r\n                                            type=\"submit\"\r\n                                            className=\"btn btn-primary btn-block\"\r\n                                            style={{\r\n                                                height: \"calc(2.15625rem + 2px)\"\r\n                                            }}\r\n                                        >\r\n                                            Add Player\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddItemForm;\r\n","import React from \"react\";\r\n\r\nconst FilterByNameForm = props => {\r\n    \r\n    function handleChange(event) {\r\n        props.onFilterInputChange(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            <div className=\"my-5 py-3 row\">\r\n                <label\r\n                    htmlFor=\"name-filter\"\r\n                    className=\"col-sm-2 col-form-label\"\r\n                >\r\n                    Filter by name\r\n                </label>\r\n                <div className=\"col-sm-10\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"name-filter\"\r\n                        id=\"name-filter\"\r\n                        placeholder=\"Stones\"\r\n                        value={props.filterInput}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default FilterByNameForm;","import React, { Component } from \"react\";\nimport Table from \"./Table\";\nimport AddItemForm from \"./AddItemForm\";\nimport uuidv1 from \"uuid/v1\";\nimport { calcRPP, roundRPP, compareFunc } from \"./helpers\";\nimport FilterByNameForm from \"./FilterByNameForm\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            items: [],\n            sortBy: \"createdAt\",\n            sortOrder: \"asc\",\n            filterInput: \"\"\n        };\n\n        this.onAdd = this.onAdd.bind(this);\n        this.onDelete = this.onDelete.bind(this);\n        this.onDeleteAll = this.onDeleteAll.bind(this);\n        this.onSort = this.onSort.bind(this);\n        this.handleFilterInputChange = this.handleFilterInputChange.bind(this);\n    }\n\n    onAdd(itemObj) {\n        const RPP = roundRPP(calcRPP(itemObj.LBIN, itemObj.desiredProfit));\n\n        const finalItemObj = {\n            name: itemObj.name,\n            LBIN: parseInt(itemObj.LBIN),\n            desiredProfit: parseInt(itemObj.desiredProfit),\n            RPP,\n            createdAt: new Date(),\n            id: uuidv1()\n        };\n\n        const items = this.state.items.concat(finalItemObj);\n\n        this.setState({ items });\n    }\n\n    onDelete(itemID) {\n        const items = this.state.items.filter(item => item.id !== itemID);\n\n        this.setState({ items });\n    }\n\n    onDeleteAll() {\n        this.setState({ items: [] });\n    }\n\n    onSort(sortProp) {\n        let items = this.state.items.slice();\n\n        if (this.state.sortOrder === \"asc\") {\n            items = items.sort((a, b) => compareFunc(a, b, sortProp, \"desc\"));\n            this.setState({ items, sortBy: sortProp, sortOrder: \"desc\" });\n        } else {\n            items = items.sort((a, b) => compareFunc(a, b, sortProp, \"asc\"));\n            this.setState({ items, sortBy: sortProp, sortOrder: \"asc\" });\n        }\n    }\n\n    handleFilterInputChange(filterInput) {\n        this.setState({ filterInput });\n    }\n\n    render() {\n        return (\n            <div className=\"container my-5\">\n                <AddItemForm onAdd={this.onAdd} />\n                <FilterByNameForm\n                    filterInput={this.state.filterInput}\n                    onFilterInputChange={this.handleFilterInputChange}\n                />\n                <div className=\"my-5\">\n                    <div className=\"table-responsive\">\n                        <Table\n                            items={this.state.items}\n                            onDelete={this.onDelete}\n                            onDeleteAll={this.onDeleteAll}\n                            onSort={this.onSort}\n                            filterInput={this.state.filterInput}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}